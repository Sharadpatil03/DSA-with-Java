class Solution {
    public int maxSubArray(int[] nums) {
        
        //Brute force solution :
        // int n=nums.length;
        // int maxSum=Integer.MIN_VALUE;
        // for(int i=0; i<n; i++){

        //     int sum=0;
        //     for(int j=i; j<n; j++){
        //         sum =sum + nums[j];

        //         maxSum=Math.max(maxSum , sum);
        //     }
        // }
        // return maxSum;

        //Optimal solution : Using Kadanes algorithm   TC: o(n)
        int n=nums.length;
        int maxSum=Integer.MIN_VALUE;
        int sum=0;
        for(int i=0; i<n; i++){
            sum+=nums[i];
            if(sum >maxSum){
                maxSum=sum;
            }

            if(sum < 0){
                sum=0;
            }
        }
        return maxSum;
    }
}
